[{"/Users/cesarvalleiva/Desktop/customhooks/src/index.js":"1","/Users/cesarvalleiva/Desktop/customhooks/src/App.js":"2","/Users/cesarvalleiva/Desktop/customhooks/src/reportWebVitals.js":"3","/Users/cesarvalleiva/Desktop/customhooks/src/Components/Characters/index.js":"4","/Users/cesarvalleiva/Desktop/customhooks/src/Components/Characters/Characters.js":"5","/Users/cesarvalleiva/Desktop/customhooks/src/Components/Character/index.js":"6","/Users/cesarvalleiva/Desktop/customhooks/src/Components/Character/Character.js":"7","/Users/cesarvalleiva/Desktop/customhooks/src/customHooks/useFetch.js":"8","/Users/cesarvalleiva/Desktop/customhooks/src/Components/Loading.js":"9"},{"size":500,"mtime":1612145326602,"results":"10","hashOfConfig":"11"},{"size":203,"mtime":1612145989007,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1612145326604,"results":"13","hashOfConfig":"11"},{"size":38,"mtime":1612145843772,"results":"14","hashOfConfig":"11"},{"size":654,"mtime":1612148389731,"results":"15","hashOfConfig":"11"},{"size":37,"mtime":1612145651864,"results":"16","hashOfConfig":"11"},{"size":814,"mtime":1612147503624,"results":"17","hashOfConfig":"11"},{"size":757,"mtime":1612147812685,"results":"18","hashOfConfig":"11"},{"size":220,"mtime":1612148728702,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ynaop",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cesarvalleiva/Desktop/customhooks/src/index.js",[],["41","42"],"/Users/cesarvalleiva/Desktop/customhooks/src/App.js",[],"/Users/cesarvalleiva/Desktop/customhooks/src/reportWebVitals.js",[],"/Users/cesarvalleiva/Desktop/customhooks/src/Components/Characters/index.js",[],"/Users/cesarvalleiva/Desktop/customhooks/src/Components/Characters/Characters.js",["43"],"// import { useState, useEffect } from 'react'\nimport { useFetch } from '../../customHooks/useFetch'\nimport { Row } from 'react-bootstrap'\nimport Character from '../Character'\nimport Loading from '../../Components/Loading'\n\nconst Characters = () => {\n    const [data, fetching, error] = useFetch('character');\n    const { results : characters} = data;\n    return ( \n        <Row>\n            {fetching ? (\n                <Loading/>\n            ) : (\n                characters.map((character) => (\n                    <Character key={character.id} {...character} />\n                ))\n            )}\n        </Row>\n     );\n}\n \nexport default Characters;","/Users/cesarvalleiva/Desktop/customhooks/src/Components/Character/index.js",[],"/Users/cesarvalleiva/Desktop/customhooks/src/Components/Character/Character.js",[],"/Users/cesarvalleiva/Desktop/customhooks/src/customHooks/useFetch.js",["44"],"import { useState, useEffect } from 'react'\nconst BASE_URL = \"https://rickandmortyapi.com/api\"\n\nexport const useFetch = (endpoint, initialState = []) => {\n    const [data, setData] = useState(initialState);\n    const [fetching, setFetching] = useState(true);\n    const [error, setError] = useState(false);\n\n    const fetchData = async () => {\n        try {\n            const result = await fetch(`${BASE_URL}/${endpoint}`);\n            const data = await result.json();\n            setData(data);\n            setFetching(false);\n        } catch (e) {\n            setData(initialState);\n            setFetching(false);\n            setError(true);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return [data, fetching, error];\n}","/Users/cesarvalleiva/Desktop/customhooks/src/Components/Loading.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":8,"column":28,"nodeType":"51","messageId":"52","endLine":8,"endColumn":33},{"ruleId":"53","severity":1,"message":"54","line":24,"column":8,"nodeType":"55","endLine":24,"endColumn":10,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [fetchData]",{"range":"62","text":"63"},[714,716],"[fetchData]"]